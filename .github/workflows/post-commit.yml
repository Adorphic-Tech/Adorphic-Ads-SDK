name: Post-Commit

on:
  push: ~

jobs:
  upload-to-crowdin:
    runs-on: ubuntu-latest
    if: github.repository == 'revive-adserver/revive-adserver' && github.github.ref_name == 'master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Crowdin Action
        if: env.CROWDIN_PROJECT_ID && env.CROWDIN_PERSONAL_TOKEN
        uses: revive-adserver/crowdin-github-action@master
        with:
          config: crowdin.yml.dist
          upload_sources: true
          upload_translations: false
          download_translations: false
          create_pull_request: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

  post-commit:
    runs-on: ubuntu-latest

    env:
      PHP_EXTENSIONS: none, ctype, curl, dom, fileinfo, intl, json, libxml, mbstring, mysqli, openssl, pgsql, tokenizer, xml, zip
      PHP_INI_VALUES: memory_limit=-1, assert.exception=1, zend.assertions=1, error_reporting=-1, log_errors_max_len=0, display_errors=On

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: ${{ env.PHP_INI_VALUES }}
          tools: composer

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Install ant 1.7
        run: |
          curl -s -O http://archive.debian.org/debian-archive/debian/pool/main/a/ant1.7/ant1.7_1.7.1-7_all.deb
          curl -s -O http://archive.debian.org/debian-archive/debian/pool/main/a/ant1.7/ant1.7-optional_1.7.1-7_all.deb
          sudo apt-get -y -qq remove ant
          sudo apt-get -y -qq install libxerces2-java
          sudo dpkg -i ant1.7_1.7.1-7_all.deb
          sudo dpkg -i ant1.7-optional_1.7.1-7_all.deb
          rm *.deb

      - name: Gather commit messages
        id: gather
        run: |
          {
            echo 'MSG<<EOF'
            echo
            echo
            echo '${{ toJson(github.event.commits) }}' | jq -r '.[].message' | sed s'/^/ * /g'
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Install dependencies with Composer
        run: composer install --no-interaction --no-ansi --no-progress

      - name: Fix code-style errors with ECS
        run: lib/vendor/bin/ecs --no-progress-bar --no-ansi --no-interaction --fix

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Code-style fix ${{ steps.gather.outputs.MSG }}'

      - name: Regenerate XML Cache
        run: ant generate-xml-cache

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: etc/xmlcache
          message: 'Regenerated XML cache ${{ steps.gather.outputs.MSG }}'

      - name: Update plugin translations
        run: php scripts/translations/update-plugins.php

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: plugins_repo
          message: 'Updated plugin translations ${{ steps.gather.outputs.MSG }}'

      - name: Update plugin packages
        run: php scripts/upgrade/rebuildBundledPlugins.php

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: "etc/plugins"
          message: 'Regenerated plugins ${{ steps.gather.outputs.MSG }}'

      - name: Regenerate delivery
        run: |
          ant generate-delivery
          ant minify-delivery

      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: www/delivery
          message: 'Regenerated delivery scripts ${{ steps.gather.outputs.MSG }}'
